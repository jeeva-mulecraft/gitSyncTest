<?xml version="1.0" encoding="UTF-8"?>
-----
<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="handle-gitlab-push-flow" doc:id="2c88cf42-5077-47ba-a04f-53d8065fb820" >
		<logger level="INFO" doc:name="Log GitLab Push" doc:id="ec5488d2-cefc-4ea9-8bff-2b24fc98b478" message="Processing GitLab push to GitHub for branch: #[vars.gitlabEvent.branchShortName], project: #[vars.gitlabEvent.project.name]"/>
		<async doc:name="Sync to GitHub Async" doc:id="ebb94f61-d03e-4541-9590-b309e474dab3" >
			<flow-ref doc:name="Sync GitLab Push to GitHub" doc:id="4a1fccfc-b337-4b51-a48d-6ec3606bd897" name="sync-gitlab-push-to-github-flow"/>
		</async>
		<set-payload value='{"status": "accepted", "message": "GitLab push event accepted for processing"}' doc:name="Set Success Response" doc:id="8fcfa4a2-3061-41a3-a750-d82b4ec8ae11" />
	
</flow>
	<flow name="sync-gitlab-push-to-github-flow" doc:id="38700a17-3345-42f4-abb2-0e179fa0f954" >
		<logger level="INFO" doc:name="Log Sync Start" doc:id="929f5c5e-410c-46ff-b528-10a7592a03f7" message="Starting GitLab to GitHub push sync for project: #[vars.gitlabEvent.project.name], branch: #[vars.gitlabEvent.branchShortName]"/>
		<flow-ref doc:name="Get GitLab Commits" doc:id="82a8f612-7a49-4612-9abe-d1593d2a9fb3" name="get-gitlab-commits-flow"/>
		<ee:transform doc:name="Prepare File Operations" doc:id="21208725-cf7a-4626-9486-5e9aefec1936" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.gitlabEvent.commits flatMap (commit) ->
    ((commit.added default []) map {
        operation: "create",
        path: $,
        content: "# File added from GitLab\nCommit: " ++ commit.id ++ "\nMessage: " ++ commit.message,
        message: "Add " ++ $ ++ " - Sync from GitLab"
    }) ++
    ((commit.modified default []) map {
        operation: "update", 
        path: $,
        content: "# File updated from GitLab\nCommit: " ++ commit.id ++ "\nMessage: " ++ commit.message,
        message: "Update " ++ $ ++ " - Sync from GitLab"
    }) ++
    ((commit.removed default []) map {
        operation: "delete",
        path: $,
        message: "Delete " ++ $ ++ " - Sync from GitLab"
    })]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<foreach doc:name="Process Each File Change" doc:id="a3e943a3-2327-404d-87c2-2dff0581d19c" >
			<ee:transform doc:name="Set Current File Operation" doc:id="84551efb-51b0-4f24-b46f-0ab5a248032c" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="currentFileOperation" ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<choice doc:name="Route by Operation" doc:id="8bf930d3-ae49-4cd0-8c3f-d0e5eafe2e45">
			<when expression="payload.operation == 'delete'">
					<http:request method="GET" doc:name="Get File for Deletion" doc:id="4853ebef-c715-4b97-a045-e42029d67b4c" config-ref="GitHub_API_Config" path="/repos/{owner}/{repo}/contents/{path}">
						<http:headers ><![CDATA[#[{
                        "Authorization": "token " ++ p('secure::github.token'),
                        "Accept": "application/vnd.github.v3+json"
                    }]]]></http:headers>
						<http:uri-params ><![CDATA[#[{
                        owner: p('secure::github.owner'),
                        repo: p('secure::github.repo'),
                        path: payload.path
                    }]]]></http:uri-params>
						<http:query-params ><![CDATA[#[{
                        ref: vars.gitlabEvent.branchShortName
                    }]]]></http:query-params>
					</http:request>
					<http:request method="DELETE" doc:name="Delete File from GitHub" doc:id="2cd8e8c9-3a59-478e-920e-3b60f52cb246" config-ref="GitHub_API_Config" path="/repos/{owner}/{repo}/contents/{path}">
						<http:body ><![CDATA[#[{
                        message: vars.currentFileOperation.message,
                        sha: payload.sha,
                        branch: vars.gitlabEvent.branchShortName
                    }]]]></http:body>
						<http:headers ><![CDATA[#[{
                        "Authorization": "token " ++ p('secure::github.token'),
                        "Accept": "application/vnd.github.v3+json",
                        "Content-Type": "application/json"
                    }]]]></http:headers>
						<http:uri-params ><![CDATA[#[{
                        owner: p('secure::github.owner'),
                        repo: p('secure::github.repo'),
                        path: vars.currentFileOperation.path
                    }]]]></http:uri-params>
					</http:request>
				</when>
				<otherwise >
					<ee:transform doc:name="Prepare File Content" doc:id="02b6dfe1-eae1-4003-9f01-cf0d4090f984" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
import toBase64 from dw::core::Binaries
output application/json
---
{
    message: payload.message,
    content: toBase64(payload.content),
    branch: vars.gitlabEvent.branchShortName
}]]></ee:set-payload>
						</ee:message>
						<ee:variables >
						</ee:variables>
					</ee:transform>
					<!-- [STUDIO:"Try"]<try doc:name="Try" doc:id="3b48a2b1-0cd5-478d-b576-192a13b8686e" >
						<http:request method="GET" doc:name="Get Existing File" doc:id="de1697aa-43f0-4008-85be-71542229aaca" path="/repos/{owner}/{repo}/contents/{path}" config-ref="GitHub_API_Config">
							<http:headers ><![CDATA[#[{
                            "Authorization": "token " ++ p('secure::github.token'),
                            "Accept": "application/vnd.github.v3+json"
                        }&#93;&#93;&#93;></http:headers>
							<http:uri-params ><![CDATA[#[{
                            owner: p('secure::github.owner'),
                            repo: p('secure::github.repo'),
                            path: vars.currentFileOperation.path
                        }&#93;&#93;&#93;></http:uri-params>
							<http:query-params ><![CDATA[#[{
                            ref: vars.gitlabEvent.branchShortName
                        }&#93;&#93;&#93;></http:query-params>
						</http:request>
						<ee:transform doc:name="Transform Message" doc:id="c096ea43-f389-4ef7-9796-d845649cd852" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
payload ++ { sha: payload.sha }&#93;&#93;></ee:set-payload>
							</ee:message>
						</ee:transform>
					</try> [STUDIO] -->
				</otherwise>
		</choice>
			<http:request method="PUT" doc:name="Create/Update File in GitHub" doc:id="f9640bb4-6b47-44db-a46c-7a75c538e0fe" config-ref="GitHub_API_Config" path="/repos/{owner}/{repo}/contents/{path}">
			<http:headers><![CDATA[#[{
                        "Authorization": "token " ++ p('secure::github.token'),
                        "Accept": "application/vnd.github.v3+json",
                        "Content-Type": "application/json"
                    }]]]></http:headers>
			<http:uri-params><![CDATA[#[{
                        owner: p('secure::github.owner'),
                        repo: p('secure::github.repo'),
                        path: vars.currentFileOperation.path
                    }]]]></http:uri-params>
		</http:request>
		</foreach>
		<logger level="INFO" doc:name="Log Sync Success" doc:id="abc8c7c6-20ea-498f-bbc9-c84f3d454add" message="Successfully synced GitLab push to GitHub for branch: #[vars.gitlabEvent.branchShortName]"/>
	
</flow>
	<flow name="get-gitlab-commits-flow" doc:id="2fbda931-9280-40d9-a079-fc5118a5cf02" >
		<ee:transform doc:name="Prepare GitLab API Request" doc:id="3250dbee-21af-4de6-8f2e-06938012709e" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="gitlabApiPath" ><![CDATA[%dw 2.0
output application/json
---
"/api/v4/projects/" ++ (vars.gitlabEvent.project.id default "") ++ "/repository/commits"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<http:request method="GET" doc:name="Get GitLab Commits" doc:id="93838a70-12bc-4452-a9fe-898d9b491641" config-ref="GitLab_API_Config" path="#[vars.gitlabApiPath]">
			<http:headers ><![CDATA[#[{
    "PRIVATE-TOKEN": p('secure::gitlab.token'),
    "Content-Type": "application/json"
}]]]></http:headers>
			<http:query-params ><![CDATA[#[{
    ref_name: vars.gitlabEvent.branchShortName,
    per_page: "10"
}]]]></http:query-params>
		</http:request>
		<ee:transform doc:name="Process Gitlab Commits" doc:id="3d018eb8-e73b-425b-9125-85c4599e5d9d" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="gitlabCommits" ><![CDATA[%dw 2.0
output application/json
---
payload map {
    id: $.id,
    message: $.message,
    author: $.author_name,
    timestamp: $.authored_date,
    added: $.stats.additions default [],
    modified: $.stats.total default [],
    removed: $.stats.deletions default []
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
	</flow>
</mule>
