<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
	<flow name="github-webhook-listener-flow" doc:id="cdab2691-1e49-4bcc-afbb-42abf20b96af" >
		<http:listener doc:name="GitHub Webhook Listener" doc:id="a403984c-c488-4dcd-a248-a42cf5069d37" config-ref="HTTP_Listener_Config" path="/webhook/github" allowedMethods="POST"/>
		<logger level="INFO" doc:name="Log GitHub Event" doc:id="dffe3e05-d9fa-444a-acca-5650b1671921" message="Received GitHub webhook: #[attributes.headers.'x-github-event'] for repo: #[payload.repository.name default 'unknown']"/>
		<flow-ref doc:name="Validate GitHub Signature" doc:id="c67922a9-de0e-48d9-bcdf-b5e366992f8e" name="validate-github-signature-flow"/>
		<ee:transform doc:name="Parse Github Event" doc:id="9bb8e0a5-335a-4d2f-86c3-ba36fb4d5780" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="syncKey" ><![CDATA[%dw 2.0
output application/json
---
"github_" ++ (attributes.headers.'x-github-delivery' default uuid())]]></ee:set-variable>
				<ee:set-variable variableName="eventType" ><![CDATA[%dw 2.0
output application/json
---
attributes.headers.'x-github-event' default ""]]></ee:set-variable>
				<ee:set-variable variableName="githubEvent" ><![CDATA[%dw 2.0
output application/json
---
{
	eventType: attributes.headers.'x-github-event' default "",
	repository: payload.repository.name default "",
	branchShortName: (payload.ref default "" splitBy "/")[-1],
	commits: payload.commits default [],
	action: payload.action default "",
	originalPayload: payload
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="Route GitLab Event" doc:id="9af5f83f-ee27-476b-8820-f0458ee76471" >
			<when expression="#[vars.eventType == 'push']">
				<flow-ref doc:name="Handle GitHub Push" doc:id="e04144f7-489c-4101-aa43-f0faff9df966" name="handle-github-push-flow"/>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Otherwise Unsupported Event" doc:id="7cbca280-dfd7-41aa-8277-1162c267e9ff" message="Unsupported GitHub event type: #[vars.githubEvent]"/>
				<set-payload value='{"status": "ignored", "message": "Event type not supported"}' doc:name="Set Ignored Response" doc:id="d0ac595f-571a-42a7-b8c4-a8f1ef97d289" />
			</otherwise>
		</choice>
	</flow>
	<flow name="validate-github-signature-flow" doc:name="Validate GitHub Signature Flow" doc:id="86e21ac8-7cc6-4e9a-894d-9ce1eac4aa30">
    <try doc:name="Try GitHub Signature Validation">
        <validation:is-not-null doc:name="Validate Signature Header" doc:id="e7963f4a-4ec3-4dee-935c-ad6a6a34b1a0" value="#[attributes.headers.'x-hub-signature-256']"/>
        <logger level="INFO" doc:name="Log Signature Validation" doc:id="7f858053-9c38-44a9-ba63-a9b6e884c3ba" message="GitHub signature validated successfully"/>
        
        <error-handler doc:name="GitHub Signature Validation Error Handler">
            <on-error-propagate enableNotifications="true" logException="true" doc:name="Handle Validation Errors" type="VALIDATION:NULL">
                <logger level="ERROR" doc:name="Log Missing Signature" 
                       message="GitHub signature header missing or invalid"/>
                <set-payload value='{"status": "error", "message": "GitHub signature validation failed"}' doc:name="Set Error Response"/>
                <set-variable variableName="httpStatus" value="401" doc:name="Set Unauthorized Status"/>
            </on-error-propagate>
            
            <on-error-propagate enableNotifications="true" logException="true" doc:name="Handle Generic Errors" type="ANY">
                <logger level="ERROR" doc:name="Log Generic Error" 
                       message="Unexpected error during GitHub signature validation: #[error.description]"/>
                <set-payload value='{"status": "error", "message": "Internal validation error"}' doc:name="Set Generic Error Response"/>
                <set-variable variableName="httpStatus" value="500" doc:name="Set Internal Error Status"/>
            </on-error-propagate>
        </error-handler>
    </try>
</flow>
</mule>

<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	<flow name="handle-github-push-flow" doc:id="42c52bf8-3945-48f9-8696-7b75cf4f6c93" >
		<logger level="INFO" doc:name="Log GitHub Push" doc:id="467c9deb-8de1-4e18-9f94-941e76f73353" message="Processing GitHub push to GitLab for branch: #[vars.githubEvent.branchShortName]"/>
		<async doc:name="Sync to GitLab Async" doc:id="47bff70d-40cd-4486-b8bf-962b10253366" >
			<flow-ref doc:name="Sync GitHub Push to GitLab" doc:id="d4dd241a-1656-4d1e-a2b5-f9ed3bfe423b" name="sync-github-push-to-gitlab-flow"/>
		</async>
	</flow>
	<flow name="sync-github-push-to-gitlab-flow" doc:id="30ac25ed-6ef5-4b0b-8a62-b8ca98886f4d" >
		<logger level="INFO" doc:name="Log Sync Start" doc:id="4ae33dc9-dc3f-425b-b58e-5fded3388e72" message="Starting GitHub to GitLab push sync for repo: #[vars.githubEvent.repository], branch: #[vars.githubEvent.branchShortName]"/>
		<flow-ref doc:name="Get GitHub Commits" doc:id="ade00ffb-03bb-4793-837b-df4a233e6374" name="get-github-commits-flow"/>
		<ee:transform doc:name="Transform for Gitlab" doc:id="37b28d2b-3301-4b12-8524-4e1dc49ae5a2" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
    branch: vars.githubEvent.branchShortName,
    commit_message: "Sync from GitHub: " ++ (vars.githubEvent.commits[0].message default "Multiple commits"),
    actions: (vars.githubEvent.commits default []) flatMap (commit) -> 
        ((commit.added default []) map {
            action: "create",
            file_path: $,
            content: "# File added from GitHub\nCommit: " ++ commit.id ++ "\nMessage: " ++ commit.message
        }) ++
        ((commit.modified default []) map {
            action: "update", 
            file_path: $,
            content: "# File updated from GitHub\nCommit: " ++ commit.id ++ "\nMessage: " ++ commit.message
        }) ++
        ((commit.removed default []) map {
            action: "delete",
            file_path: $
        })
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="38fbe767-f549-4fe4-9d34-c6a01df198db" message="#[payload]"/>
		<http:request method="POST" doc:name="Push to GitLab" doc:id="b728faf6-324e-41bd-9826-083f2d1fbbf8" config-ref="GitLab_API_Config" path="/api/v4/projects/{projectId}/repository/commits">
			<http:headers ><![CDATA[#[{
	"PRIVATE-TOKEN": Mule::p('secure::gitlab.token'),
	"Content-Type": "application/json"
}]]]></http:headers>
			<http:uri-params ><![CDATA[#[{
	projectId: Mule::p('secure::gitlab.project.id')
}]]]></http:uri-params>
		</http:request>
		<logger level="INFO" doc:name="Log Sync Success" doc:id="9c0737dd-b45b-4130-8244-d3359d8f0284" message="Successfully synced GitHub push to GitLab"/>
	</flow>
	<flow name="get-github-commits-flow" doc:id="b9cbad5d-aa80-427a-9581-5bbb5dec35ff" >
		<ee:transform doc:name="Prepare Github Api Request" doc:id="c626432f-b80b-4670-bb4b-5fccb362ffaa" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="githubApiPath" ><![CDATA[%dw 2.0
output application/json
---
"/repos/" ++ (p('secure::github.owner') default "") ++ "/" ++ (vars.githubEvent.repository default "") ++ "/commits"
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		
		<http:request method="GET" doc:name="Get GitHub Commits" doc:id="43497bb1-3516-46c4-b6b3-c0b9516b177d" config-ref="GitHub_API_Config" path="#[vars.githubApiPath]">
			<http:headers ><![CDATA[#[{
    "Authorization": "token " ++ (Mule::p('secure::github.token') default ""),
    "Accept": "application/vnd.github.v3+json"
}]]]></http:headers>
			<http:query-params ><![CDATA[#[{
    sha: vars.githubEvent.branchShortName,
    per_page: "10"
}]]]></http:query-params>
		</http:request>
		<ee:transform doc:name="Process Github Commits" doc:id="1eb6e43a-43ba-4dd5-a4c7-9df21f708b49" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="githubCommits" ><![CDATA[%dw 2.0
output application/json
---
payload map {
    id: $.sha,
    message: $.commit.message,
    author: $.commit.author.name,
    timestamp: $.commit.author.date
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
	</flow>
</mule>


<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">

	<flow name="gitlab-webhook-listener-flow" doc:id="95138f8a-a3d4-4e0e-a082-64af08438c07" >
		<http:listener doc:name="GitLab Webhook Listener" doc:id="1b5ba79c-7b14-4958-bff4-2b26e9590dd5" config-ref="HTTP_Listener_Config" path="/webhook/gitlab" allowedMethods="POST"/>
		<logger level="INFO" doc:name="Log GitLab Event" doc:id="2332450b-49bc-4dab-afe5-d6e9e202b438" message="Received GitLab webhook: #[attributes.headers.'x-gitlab-event'] for project: #[payload.project.name default 'unknown']"/>
		<flow-ref doc:name="Validate GitLab Token" doc:id="d3978eb1-bc26-4161-8e16-a27a01e209fd" name="validate-gitlab-token-flow"/>
		<ee:transform doc:name="Parse Gitlab Event" doc:id="95d0457c-041a-4b7e-8d82-4db9762a924c" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="gitlabEvent" ><![CDATA[%dw 2.0
output application/java
---
{
	eventType: attributes.headers.'x-gitlab-event' default "",
	project: payload.project.name default "",
	branchShortName: (payload.ref default "" splitBy "/")[-1],
	commits: payload.commits default [],
	originalPayload: payload
}]]></ee:set-variable>
				<ee:set-variable variableName="eventType" ><![CDATA[%dw 2.0
output application/json
---
attributes.headers.'x-gitlab-event' default ""]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="Route GitLab Event" doc:id="2018d915-9136-47a6-8f66-670fec27233e" >
			<when expression="#[vars.eventType == 'Push Hook']">
				<flow-ref doc:name="Handle GitLab Push" doc:id="4989b161-b83b-41a4-ad08-b366de7beda8" name="handle-gitlab-push-flow"/>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Otherwise Unsupported Event" doc:id="56179b6f-e69e-4c25-bd79-e4b3d6605ede" message="Unsupported GitLub event type: #[vars.gitlabEvent]"/>
				<set-payload value='{"status": "ignored", "message": "Event type not supported"}' doc:name="Set Ignored Response" doc:id="4b8d6270-2fc1-429c-b46e-16a90f74b66d" />
			</otherwise>
		</choice>
	</flow>
	

<flow name="validate-gitlab-token-flow" doc:name="Validate GitLab Token Flow" doc:id="dcbf6204-54ef-432c-b1fb-7905d6c1b503">
    <try doc:name="Try GitLab Token Validation">
        <validation:is-not-null doc:name="Validate Token Header" doc:id="102ff296-911a-443c-a0e9-1c31672b02f5" value="#[attributes.headers.'x-gitlab-token']" message="GitLab token header missing"/>
        <validation:is-true doc:name="Validate Token Value" doc:id="1875a1d8-f81b-4224-851b-1252654c1615" expression="#[attributes.headers.'x-gitlab-token' == p('secure::gitlab.webhook.token')]" message="Invalid GitLab webhook token"/>
        <logger level="DEBUG" doc:name="Log Token Validation" doc:id="660d136f-0703-434a-b29c-7905e8e14a03" message="GitLab token validated successfully"/>
        
        <error-handler doc:name="GitLab Token Validation Error Handler">
            <on-error-propagate enableNotifications="true" logException="true" doc:name="Handle Missing Token" type="VALIDATION:NULL">
                <logger level="ERROR" doc:name="Log Missing Token" 
                       message="GitLab token header is missing"/>
                <set-payload value='{"status": "error", "message": "GitLab token header missing"}' doc:name="Set Missing Token Response"/>
                <set-variable variableName="httpStatus" value="401" doc:name="Set Unauthorized Status"/>
            </on-error-propagate>
            
            <on-error-propagate enableNotifications="true" logException="true" doc:name="Handle Invalid Token" type="VALIDATION:INVALID_BOOLEAN">
                <logger level="ERROR" doc:name="Log Invalid Token" 
                       message="GitLab token validation failed - invalid token provided"/>
                <set-payload value='{"status": "error", "message": "Invalid GitLab webhook token"}' doc:name="Set Invalid Token Response"/>
                <set-variable variableName="httpStatus" value="403" doc:name="Set Forbidden Status"/>
            </on-error-propagate>
            
            <on-error-propagate enableNotifications="true" logException="true" doc:name="Handle Configuration Errors" type="EXPRESSION">
                <logger level="ERROR" doc:name="Log Configuration Error" 
                       message="GitLab token configuration error: #[error.description]"/>
                <set-payload value='{"status": "error", "message": "Token configuration error"}' doc:name="Set Configuration Error Response"/>
                <set-variable variableName="httpStatus" value="500" doc:name="Set Internal Error Status"/>
            </on-error-propagate>
            
            <on-error-propagate enableNotifications="true" logException="true" doc:name="Handle Generic Errors" type="ANY">
                <logger level="ERROR" doc:name="Log Generic Error" 
                       message="Unexpected error during GitLab token validation: #[error.description]"/>
                <set-payload value='{"status": "error", "message": "Internal validation error"}' doc:name="Set Generic Error Response"/>
                <set-variable variableName="httpStatus" value="500" doc:name="Set Internal Error Status"/>
            </on-error-propagate>
        </error-handler>
    </try>
</flow>

</mule>

<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">

	<flow name="gitlab-webhook-listener-flow" doc:id="95138f8a-a3d4-4e0e-a082-64af08438c07" >
		<http:listener doc:name="GitLab Webhook Listener" doc:id="1b5ba79c-7b14-4958-bff4-2b26e9590dd5" config-ref="HTTP_Listener_Config" path="/webhook/gitlab" allowedMethods="POST"/>
		<logger level="INFO" doc:name="Log GitLab Event" doc:id="2332450b-49bc-4dab-afe5-d6e9e202b438" message="Received GitLab webhook: #[attributes.headers.'x-gitlab-event'] for project: #[payload.project.name default 'unknown']"/>
		<flow-ref doc:name="Validate GitLab Token" doc:id="d3978eb1-bc26-4161-8e16-a27a01e209fd" name="validate-gitlab-token-flow"/>
		<ee:transform doc:name="Parse Gitlab Event" doc:id="95d0457c-041a-4b7e-8d82-4db9762a924c" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="gitlabEvent" ><![CDATA[%dw 2.0
output application/java
---
{
	eventType: attributes.headers.'x-gitlab-event' default "",
	project: payload.project.name default "",
	branchShortName: (payload.ref default "" splitBy "/")[-1],
	commits: payload.commits default [],
	originalPayload: payload
}]]></ee:set-variable>
				<ee:set-variable variableName="eventType" ><![CDATA[%dw 2.0
output application/json
---
attributes.headers.'x-gitlab-event' default ""]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="Route GitLab Event" doc:id="2018d915-9136-47a6-8f66-670fec27233e" >
			<when expression="#[vars.eventType == 'Push Hook']">
				<flow-ref doc:name="Handle GitLab Push" doc:id="4989b161-b83b-41a4-ad08-b366de7beda8" name="handle-gitlab-push-flow"/>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Otherwise Unsupported Event" doc:id="56179b6f-e69e-4c25-bd79-e4b3d6605ede" message="Unsupported GitLub event type: #[vars.gitlabEvent]"/>
				<set-payload value='{"status": "ignored", "message": "Event type not supported"}' doc:name="Set Ignored Response" doc:id="4b8d6270-2fc1-429c-b46e-16a90f74b66d" />
			</otherwise>
		</choice>
	</flow>
	

<flow name="validate-gitlab-token-flow" doc:name="Validate GitLab Token Flow" doc:id="dcbf6204-54ef-432c-b1fb-7905d6c1b503">
    <try doc:name="Try GitLab Token Validation">
        <validation:is-not-null doc:name="Validate Token Header" doc:id="102ff296-911a-443c-a0e9-1c31672b02f5" value="#[attributes.headers.'x-gitlab-token']" message="GitLab token header missing"/>
        <validation:is-true doc:name="Validate Token Value" doc:id="1875a1d8-f81b-4224-851b-1252654c1615" expression="#[attributes.headers.'x-gitlab-token' == p('secure::gitlab.webhook.token')]" message="Invalid GitLab webhook token"/>
        <logger level="DEBUG" doc:name="Log Token Validation" doc:id="660d136f-0703-434a-b29c-7905e8e14a03" message="GitLab token validated successfully"/>
        
        <error-handler doc:name="GitLab Token Validation Error Handler">
            <on-error-propagate enableNotifications="true" logException="true" doc:name="Handle Missing Token" type="VALIDATION:NULL">
                <logger level="ERROR" doc:name="Log Missing Token" 
                       message="GitLab token header is missing"/>
                <set-payload value='{"status": "error", "message": "GitLab token header missing"}' doc:name="Set Missing Token Response"/>
                <set-variable variableName="httpStatus" value="401" doc:name="Set Unauthorized Status"/>
            </on-error-propagate>
            
            <on-error-propagate enableNotifications="true" logException="true" doc:name="Handle Invalid Token" type="VALIDATION:INVALID_BOOLEAN">
                <logger level="ERROR" doc:name="Log Invalid Token" 
                       message="GitLab token validation failed - invalid token provided"/>
                <set-payload value='{"status": "error", "message": "Invalid GitLab webhook token"}' doc:name="Set Invalid Token Response"/>
                <set-variable variableName="httpStatus" value="403" doc:name="Set Forbidden Status"/>
            </on-error-propagate>
            
            <on-error-propagate enableNotifications="true" logException="true" doc:name="Handle Configuration Errors" type="EXPRESSION">
                <logger level="ERROR" doc:name="Log Configuration Error" 
                       message="GitLab token configuration error: #[error.description]"/>
                <set-payload value='{"status": "error", "message": "Token configuration error"}' doc:name="Set Configuration Error Response"/>
                <set-variable variableName="httpStatus" value="500" doc:name="Set Internal Error Status"/>
            </on-error-propagate>
            
            <on-error-propagate enableNotifications="true" logException="true" doc:name="Handle Generic Errors" type="ANY">
                <logger level="ERROR" doc:name="Log Generic Error" 
                       message="Unexpected error during GitLab token validation: #[error.description]"/>
                <set-payload value='{"status": "error", "message": "Internal validation error"}' doc:name="Set Generic Error Response"/>
                <set-variable variableName="httpStatus" value="500" doc:name="Set Internal Error Status"/>
            </on-error-propagate>
        </error-handler>
    </try>
</flow>

</mule>
